-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.usuario
(
    id_usuario serial NOT NULL,
    nome_usuario character varying(200) NOT NULL,
    email character varying(200) NOT NULL,
    id_perfil_acesso integer,
    senha character varying(500) NOT NULL,
    cpf character varying(100) NOT NULL,
    PRIMARY KEY (id_usuario),
    CONSTRAINT usuario_unico UNIQUE (id_usuario, email, cpf)
);

CREATE TABLE IF NOT EXISTS public.perfil_acesso
(
    id_perfil_acess integer NOT NULL,
    type_acess character varying(200) NOT NULL,
    PRIMARY KEY (id_perfil_acess),
    CONSTRAINT perfil_unique UNIQUE (id_perfil_acess)
);

CREATE TABLE IF NOT EXISTS public.paciente
(
    id_paciente serial NOT NULL,
    id_usuario integer NOT NULL,
    PRIMARY KEY (id_paciente)
);

CREATE TABLE IF NOT EXISTS public.profissional_de_saude
(
    id_profissional_de_saude serial NOT NULL,
    crm character varying NOT NULL,
    id_especialidade integer,
    id_usuario integer,
    PRIMARY KEY (id_profissional_de_saude),
    CONSTRAINT unico_crm UNIQUE (crm),
    CONSTRAINT unico_usuario UNIQUE (id_usuario)
);

CREATE TABLE IF NOT EXISTS public.especialidade
(
    id_especialidade integer NOT NULL,
    tipo_especialidade character varying NOT NULL,
    PRIMARY KEY (id_especialidade),
    CONSTRAINT unico_tipo_especialidade UNIQUE (tipo_especialidade)
);

CREATE TABLE IF NOT EXISTS public.agendamento
(
    id_agendamento serial NOT NULL,
    id_profissional_de_saude integer NOT NULL,
    id_paciente integer NOT NULL,
    data_agendamento date,
    hora_agendamento time with time zone,
    PRIMARY KEY (id_agendamento),
    CONSTRAINT unico_agendamento UNIQUE (id_profissional_de_saude, id_paciente, data_agendamento, hora_agendamento)
);

ALTER TABLE IF EXISTS public.paciente
    ADD CONSTRAINT fk_paciente_usuario FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.profissional_de_saude
    ADD CONSTRAINT fk_profissional_de_saude_usuario FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.profissional_de_saude
    ADD CONSTRAINT fk_profissional_de_saude_especialidade FOREIGN KEY (id_especialidade)
    REFERENCES public.especialidade (id_especialidade) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.agendamento
    ADD CONSTRAINT fk_profissional_de_saude_agendamento FOREIGN KEY (id_profissional_de_saude)
    REFERENCES public.profissional_de_saude (id_profissional_de_saude) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.agendamento
    ADD CONSTRAINT fk_paciente_agendamento FOREIGN KEY (id_paciente)
    REFERENCES public.paciente (id_paciente) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;